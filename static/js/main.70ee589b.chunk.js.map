{"version":3,"sources":["profile-picture.jpg","components/NavItem/index.js","components/Header/index.js","components/Footer/index.js","pages/About/index.js","components/Project/index.js","pages/Portfolio/index.js","pages/Contact/index.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","NavItem","props","location","useLocation","className","routes","includes","pathname","to","text","Header","Footer","About","style","height","objectFit","src","profilePicture","alt","Project","class","name","href","url","rel","target","title","children","frameborder","width","Portfolio","id","data-ride","data-interval","margin","backgroundColor","data-target","data-slide-to","padding","role","data-slide","aria-hidden","Contact","state","senderName","senderEmail","message","handleInputChange","pEvent","lInputElement","lInputName","lInputValue","value","lNewState","setState","for","type","onChange","this","rows","encodeURIComponent","Component","App","exact","path","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.70ee589b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/profile-picture.01242cad.jpg\";","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport './style.css'\n\nfunction NavItem( props ){\n    // This will allow us to listen to the page location and change the active\n    // NavItem whenever the location changes\n    const location = useLocation();\n\n    return (\n        // Add the active class if the current addres path is contained in our routes array \n        <li className={`nav-item ${props.routes.includes( location.pathname ) ? 'active' : ''}`}>\n            <Link className=\"nav-link\" to={props.routes[0]} >\n                {props.text}\n            </Link>\n        </li>\n    );\n}\n\nexport default NavItem;","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport NavItem from '../NavItem';\nimport './style.css';\n\nfunction Header(){\n    return (\n        <header className=\"Portfolio-header\">\n            <nav className=\"Portfolio-header-logoBar navbar navbar-light bg-light\">\n                <Link className=\"navbar-brand\" to=\"/\" >\n                    Eduardo Sánchez Villafán's portfolio\n                </Link>\n            </nav>\n            <nav className=\"Portfolio-header-menuBar navbar navbar-expand-sm navbar-dark bg-dark\">\n                <ul className=\"navbar-nav\">\n                    <NavItem routes={['/about', '/']} text=\"About\" />\n                    <NavItem routes={['/portfolio']} text=\"Portfolio\" />\n                    <NavItem routes={['/contact']} text=\"Contact\" />\n                </ul>\n            </nav>\n        </header>\n    );\n}\n\nexport default Header;","import React from 'react';\nimport './style.css';\n\nfunction Footer(){\n    return (\n        <footer className=\"Portfolio-footer px-4\">\n            &copy; 2020 - Eduardo Sánchez Villafán\n        </footer>\n    );\n}\n\nexport default Footer;","import React from 'react';\nimport profilePicture from '../../profile-picture.jpg'\n\nfunction About(){\n    return (\n        <div className=\"container p-4\" >\n            <div className=\"Portfolio-card card shadow bg-secondary text-white\">\n                <div className=\"card-header bg-dark\">\n                    <h5 className=\"m-0\">\n                        About\n                    </h5>\n                </div>\n                {/* The no-gutters class makes the columns not to have gaps between themselves */}\n                <div className=\"row no-gutters\">\n                    {/* Full width on extra small screen, 4 columns from small onwards */}\n                    <div className=\"col-12 col-sm-4\">\n                        {/* In the style attribute, adapt the image to the height of the column and then make the image fill the whole space preserving the proportions of the image and aligning to the middle of it */}\n                        <img className=\"card-img rounded-0\" style={{ height: '100%', objectFit: 'cover' }} src={profilePicture} alt=\"Eduardo Sánchez Villafán\" />\n                    </div>\n                    {/* This should complement the above column. Full width on extra small screen, take the rest of the columns from small onwards */}\n                    <div className=\"col-12 col-sm\">\n                        <div className=\"card-body\">\n                            <p className=\"card-text\">\n                            Hello, feel free to send me and e-mail if you would like to discuss a project.\n                            </p>\n                            <p className=\"card-text\">\n                                <small>Last update: AUG-26, 2020</small>\n                            </p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default About;","import React from 'react';\nimport './style.css'\n\nfunction Project(props) {\n    return (\n        <div className=\"card bg-secondary rounded-0 border-0\">\n            <div class=\"card-body p-0\">\n                <div className=\"p-4\">\n                    <div className=\"row mb-4\">\n                        <div className=\"col\">\n                            <h3 className=\"mb-0\">{props.name}</h3>\n                        </div>\n                        {/* col-auto adjusts to the column content instead of a fixed width, this way the button gets aligned to the right because the column containing it will shrink to the width of the content */}\n                        <div className=\"col-auto\">\n                            {/* The rel=\"noreferrer noopener\" was suggested by eslint and is used not to leak data of the previous page the user was in */}\n                            <a className=\"btn btn-primary\" href={props.url} rel=\"noreferrer noopener\" target=\"_blank\" title=\"Open in new window\">\n                                <span className=\"fa fa-external-link\"></span>\n                            </a>\n                        </div>\n                    </div>\n                    <div>\n                        {/* Children is a special prop which contains the children elements of the component tag */}\n                        {props.children}\n                    </div>\n                </div>\n                <iframe className=\"d-block\" title={props.name} src={props.url} frameborder=\"0\" style={{ width: '100%', height: '600px' }}></iframe>\n            </div>\n        </div>\n    );\n}\n\nexport default Project;","import React from 'react';\nimport Project from '../../components/Project'\n\nfunction Portfolio(){\n    return (\n        <div className=\"container p-4\">\n            <div className=\"Portfolio-card card shadow bg-secondary text-white\">\n                <div className=\"card-header bg-dark\">\n                    <h5 className=\"m-0\">\n                        Portfolio\n                    </h5>\n                </div>\n                <div className=\"card-body p-0\">\n                    {/* data-interval=\"false\" makes the carousel not to cycle automatically */}\n                    <div className=\"Portfolio-carousel carousel slide\" id=\"Portfolio-carousel\" data-ride=\"carousel\" data-interval=\"false\">\n                        <ol class=\"carousel-indicators align-items-center\" style={{height: '30px', margin: '0 10%', backgroundColor: '#0000002A' }}>\n                            <li data-target=\"#Portfolio-carousel\" data-slide-to=\"0\" class=\"active\"></li>\n                            <li data-target=\"#Portfolio-carousel\" data-slide-to=\"1\"></li>\n                            <li data-target=\"#Portfolio-carousel\" data-slide-to=\"2\"></li>\n                            <li data-target=\"#Portfolio-carousel\" data-slide-to=\"3\"></li>\n                        </ol>\n                        <div style={{height: '20px', margin: '0 10%', backgroundColor: '#0000002A'}}></div>\n                        <div className=\"carousel-inner\" style={{padding: '0 10% 30px'}}>\n                            <div className=\"carousel-item active\">\n                                <Project\n                                    name=\"Backpacker's Assistant\"\n                                    url=\"https://basovchemeduardosanchez.github.io/Project1/index.html\"\n                                >\n                                    <p>\n                                        Tha back packers assistant is the ultimate tool to design a trip on a clever way,it features the usage of several REST APIs, including Triposo, UnsplashSource, Mappquest ans Rest Countries. Its goal is to hep people to plan vacation trips on a successful way integrating many useful data sources on a single system\n                                    </p>\n                                </Project>\n                            </div>\n                            <div className=\"carousel-item\">\n                                <Project\n                                    name=\"Random Password Generator\"\n                                    url=\"https://basovchemeduardosanchez.github.io/bootcamp-homework-003/\"\n                                >\n                                    <p>\n                                        A simple randomizer to generate passwords\n                                    </p>\n                                </Project>\n                            </div>\n                            <div className=\"carousel-item\">\n                                <Project\n                                    name=\"CSS Challenge\"\n                                    url=\"https://basovchemeduardosanchez.github.io/bootcamp-homework-004/\"\n                                >\n                                    <p>\n                                    A simple game to test your CSS skills\n                                    </p>\n                                </Project>\n                            </div>\n                            <div className=\"carousel-item\">\n                                <Project\n                                    name=\"Plan It!\"\n                                    url=\"https://polar-hamlet-63733.herokuapp.com/\"\n                                >\n                                    <p>\n                                    A tasks organizer\n                                    </p>\n                                </Project>\n                            </div>\n                        </div>\n                        <a className=\"carousel-control-prev\" style={{width: '10%', backgroundColor: '#0005'}} href=\"#Portfolio-carousel\" role=\"button\" data-slide=\"prev\">\n                            <span className=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n                            <span className=\"sr-only\">Previous</span>\n                        </a>\n                        <a className=\"carousel-control-next\" style={{width: '10%', backgroundColor: '#0005'}} href=\"#Portfolio-carousel\" role=\"button\" data-slide=\"next\">\n                            <span className=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n                            <span className=\"sr-only\">Next</span>\n                        </a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Portfolio;","import React, {Component} from 'react';\n\nclass Contact extends Component {\n    state = {\n        senderName: '',\n        senderEmail: '',\n        message: ''\n    };\n\n    handleInputChange = ( pEvent ) => {\n        let lInputElement = pEvent.target,\n            lInputName = lInputElement.name,\n            lInputValue = lInputElement.value,\n            // Create a new object to merge the current state with\n            lNewState = {};\n\n        // Add a key named the same as the input name to the object and set it\n        // to the value of the input\n        lNewState[ lInputName ] = lInputValue;\n\n        // Merge the new object with the current state\n        this.setState( lNewState );\n    }\n\n    render(){\n        return (\n            <div className=\"container p-4\">\n                <div className=\"Portfolio-card card shadow bg-secondary text-white\">\n                    <div className=\"card-header bg-dark\">\n                        <h5 className=\"m-0\">\n                            Contact\n                        </h5>\n                    </div>\n                    <div className=\"card-body\">\n                        <div className=\"form-group\">\n                            <label for=\"Portfolio-contact-name\">Name</label>\n                            <input\n                                className=\"form-control\"\n                                id=\"Portfolio-contact-name\"\n                                // The name must be the same as the status\n                                // variable for this to work properly\n                                name=\"senderName\" type=\"text\"\n                                onChange={this.handleInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label for=\"Portfolio-contact-email\">E-mail</label>\n                            <input\n                                className=\"form-control\"\n                                id=\"Portfolio-contact-email\"\n                                // The name must be the same as the status\n                                // variable for this to work properly\n                                name=\"senderEmail\"\n                                type=\"email\"\n                                onChange={this.handleInputChange}\n                            />\n                        </div>\n                        <div className=\"form-group\">\n                            <label for=\"Portfolio-contact-text\">Text</label>\n                            <textarea\n                                className=\"form-control\"\n                                // The name must be the same as the status\n                                // variable for this to work properly\n                                name=\"message\"\n                                onChange={this.handleInputChange}\n                                rows=\"4\"\n                            ></textarea>\n                        </div>\n                        <a\n                            className=\"btn btn-primary\"\n                            type=\"submit\"\n                            // When inputs are changed, this link is re-created\n                            // to include the text in the inputs into a mailto¡\n                            // link. mailto links are special links intended for\n                            // e-mail. When one of these links is clicked, it\n                            // will open a new message in your default e-mail\n                            // client pre-filled with some data, depending on\n                            // the syntax. See https://developer.yoast.com/blog/guide-mailto-links/\n                            // for more information on the mailto link syntax.\n                            // In this case we're filling the `to` field, the\n                            // `subject` field and the `body` of the message\n                            // with te details that the user added in the form\n                            // We're using encodeURIComponent because the text\n                            // in the link must be URI encoded for it to work\n                            // properly with special characters\n                            href={`mailto:basov_chem_eduardo_sanchez@hotmail.com?subject=${encodeURIComponent(`Portfolio contact from ${this.state.senderName} (${this.state.senderEmail})`)}&body=${encodeURIComponent(this.state.message)}`}\n                        >\n                            <span className=\"fa fa-envelope-o\"></span> Send\n                        </a>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Contact;\n","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport About from './pages/About';\nimport Portfolio from './pages/Portfolio';\nimport Contact from './pages/Contact';\nimport './App.css';\n\nfunction App() {\n  return (\n    <BrowserRouter >\n      <Header />\n      <Switch>\n        <Route exact path={['/about', '/']} >\n          <About />\n        </Route>\n        <Route exact path={['/portfolio']} >\n          <Portfolio />\n        </Route>\n        <Route exact path={['/contact']} >\n          <Contact />\n        </Route>\n      </Switch>\n      <Footer />\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}